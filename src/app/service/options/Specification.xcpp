// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-tarwater/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/tarwater/tree/LICENSE
#divert <fpp>
namespace app::service::options {
  //
  // The options specification
  //
  // Usage:
  //
  //   Specification spec;
  //   options::Parser parser{cfg, spec}
  //
  class Specification;
}
#endiv
#divert <hpp>
#import tunitas.app.options.Specification
class app::service::options::Specification : public tunitas::app::options::Specification {
  using Ancestor = tunitas::app::options::Specification;
public:
  Specification();
};
#endiv
#divert <cpp>
#import options.argument.constants
namespace oa = options::argument;
#import app.service.options.indicator.constants
namespace oi = app::service::options::indicator;
app::service::options::Specification::Specification()
  //
  // options::indicator::MISSING requires ':' because
  // <quote>
  //   If the first character (following any optional '+' or '-' described 
  //   above) of optstring is a colon (':'), then getopt() likewise
  //   does not print an error message. In addition, it returns ':' instead
  //   of '?' to indicate a missing option argument.
  // </quote>
  //
  //          /------------------ this [read carefully getopt(3)]
  //          |
  //          v
  : Ancestor{":hVdvqwybfPp:Du:M:",
             {{"usage", oa::NO, oi::USAGE_SUBCOMMAND},
              {"help", oa::NO, oi::USAGE_SUBCOMMAND},
              {"version", oa::NO, oi::VERSION_SUBCOMMAND},
	      {"debug", oa::NO, oi::DEBUG_MODE},
	      {"verbose", oa::NO, oi::VERBOSE_MODE},
	      {"quiet", oa::NO, oi::QUIET_MODE},
	      {"warning", oa::NO, oi::WARNING_MODE},
	      {"warnings", oa::NO, oi::WARNING_MODE},
	      {"dryrun", oa::NO, oi::DRYRUN_MODE},
	      {"dry-run", oa::NO, oi::DRYRUN_MODE},
	      {"fg", oa::NO, oi::FOREGROUND_MODE},
	      {"foreground", oa::NO, oi::FOREGROUND_MODE},
	      {"bg", oa::NO, oi::BACKGROUND_MODE},
	      {"background", oa::NO, oi::BACKGROUND_MODE},
	      {"pid", oa::NO, oi::EMIT_PID},
	      {"emit-pid", oa::NO, oi::EMIT_PID},
	      {"port", oa::REQUIRED, oi::SERVICE_PORT},
	      {"drop", oa::NO, oi::DROP_PRIVILEGES},
	      {"drop-privilege", oa::NO, oi::DROP_PRIVILEGES},
	      {"drop-privileges", oa::NO, oi::DROP_PRIVILEGES},
	      {"user", oa::REQUIRED, oi::UNPRIVILEGED_USER},
	      {"unprivileged-user", oa::REQUIRED, oi::UNPRIVILEGED_USER},
	      {"ms", oa::REQUIRED, oi::MEMBER_STORAGE},
	      {"member-storage", oa::REQUIRED, oi::MEMBER_STORAGE},
	      {"memberstoreage", oa::REQUIRED, oi::MEMBER_STORAGE},
	      {"member-store", oa::REQUIRED, oi::MEMBER_STORAGE},
	      {"memberstore", oa::REQUIRED, oi::MEMBER_STORAGE}}}
{ }
#endiv
