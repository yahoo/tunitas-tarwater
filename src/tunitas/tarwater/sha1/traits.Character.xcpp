// This is -*- c++ -*- (as close to C++2a as possible)
#divert <fpp>
#import tunitas.tarwater.sha1.required.Character
namespace tunitas::tarwater::sha1::traits {
  //
  // Characterizing the traits of the actual characters that are at once
  // 1. Bytes -- octets
  // 2. chars -- lexical natural language glyph code points.
  //
  template<required::Character CHAR> struct Character;
}
#endiv
#divert <hpp>
#import std.char_traits
namespace tunitas::tarwater::sha1 {
  template<required::Character CHAR> struct traits::Character : public std::char_traits<CHAR> { };
}
#endiv
#divert <cpp>
// This is, of course, test code.
namespace tunitas::tarwater::sha1::traits {
  static_assert(1 == Character<char>::char_type{1});
}
#endiv
