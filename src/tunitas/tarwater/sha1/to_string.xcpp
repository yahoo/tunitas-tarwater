// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2018, 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-tarwater/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/tarwater/tree/LICENSE
#divert <hpp>
#import std.string
#import tunitas.tarwater.sha1.Bytes
#import tunitas.tarwater.sha1.Hexstring
namespace tunitas::tarwater::sha1 {
  //
  // Convert a SHA1 hash (bytes) to a (printable) string.
  // These always copy.
  //
  inline auto to_string(Bytes const &) -> std::string;
  inline auto to_string(Hexstring const &) -> std::string;
}
#endiv
#divert <ipp>
#import tunitas.tarwater.sha1.detail
#import std.move
auto tunitas::tarwater::sha1::to_string(Bytes const &bs) -> std::string {
  std::string re;
  for (auto b : bs) {
    auto [hi, lo] = detail::hexpair(b);
    re.push_back(hi);
    re.push_back(lo);
  }
  return re;
}
auto tunitas::tarwater::sha1::to_string(Hexstring const &hs) -> std::string {
  return std::string{hs.begin(), hs.end()};
}
#endiv
