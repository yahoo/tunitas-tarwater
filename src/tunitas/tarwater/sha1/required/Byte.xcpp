// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-tarwater/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/tarwater/tree/LICENSE
#divert <fpp>
#include <hpp/tunitas.tarwater.sha1.traits.Byte>
namespace tunitas::tarwater::sha1::required {
  //
  // A byte is an octet.
  // The Byte concept is defined in terms of the existence of traits::Byte
  //
  // Reminder: traits::Byte<CHAR> implements our protocol (tunitas::tarwater::sha1).
  //  whereas: traits::Character<CHAR> implements (inherits from) std::char_traits<CHAR>
  //
  // As such, testing for our 'isa' particle in the traits declaration is sufficient
  //
  template<typename BYTE> concept bool Byte = traits::Byte<BYTE>::isa;
}
#endiv
