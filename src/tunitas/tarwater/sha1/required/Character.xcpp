// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-tarwater/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/tarwater/tree/LICENSE
#divert <fpp>
#import std.remove_const
namespace tunitas::tarwater::sha1::required {
  //
  // The character is a natural language glyph that is also a Byte
  // This means that multi-byte characters and the single-byte small integers (unsigned & signed char) are not "characters"
  //
  // Reminder: traits::Character<CHAR> implements (inherits from) std::char_traits<CHAR>
  //  whereas: traits::Byte<CHAR> implements our protocol (tunitas::tarwater::sha1).
  //
  // Thus it is reasonable to say the following:
  //
  //   template<required::Character C, required::Character_Traits T> ...std::basic_ostream<C, T>
  //   template<required::Character C, required::Character_Traits T, typename A> ...std::basic_string<C, T, A>
  //
  template<typename CHAR> concept bool Character = std::is_same<char, typename std::remove_const<CHAR>::type>::value;
}
#endiv
